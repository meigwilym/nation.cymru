# WordPress single site rules.
# Designed to be included in any server {} block.
# Upstream to abstract backend connection(s) for php
upstream php {
        server unix:/var/run/php-fpm/php-fpm.sock;
#         server 127.0.0.1:9000;
}

server {
	listen 80;

        server_name nation.cymru;
        root /var/www/nation.cymru/htdocs;
        index index.php;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
		try_files  $uri =404;
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;
        }

	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_min_length 256;
	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires 1y;
		access_log off;
		add_header Cache-Control "public";
                log_not_found off;
        }

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/nation.cymru/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/nation.cymru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

}
